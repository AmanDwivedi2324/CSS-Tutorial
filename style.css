/* 
Understading CSS -> CSS stands for Cascading Style Sheet which is used for styling 

Understanding linkage with HTML -> <link rel = "stylesheet" href = "style.css">

Understanding CSS working way ->
            target element{
               property: value;
            }

Marging -> Space between two elements (like space between box1 and box2)
Padding -> Space within same element (like there are three lines within one box and the space between these three lines )

For setting background image -> background-image : url(link)
      with background image essential properties -> 
            background-size: cover;
            background-position: centre/top/botton;

Position: absolute -> Elements with position absolute are moved towards top and the elements behind it are move to forward
                     Elements move upwards in layers
                     The upward moved elements can go anywhere
                     To stop this fluttering of elements beyond their parent element we use POSITION RELATIVE

Position: relative -> Used to keep child elements within their parent element

Understanding flexbox -> Like there are three boxes which are arranged in column , to convert it into row we use display: flex;
                        parent element -> display: flex;
                        width-wise -> justify-content: start/end/center/space-between/space-around;
                        height-wise -> align-items: center; */


/* css boiler plate code  -> Something that is good habit and help in gaining desired results*/

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
 }
 
 html,body{
    height: 100%;
    width: 100%;
 }
   
 
  /* 1-color property : it is used for changing color of foreground (link,name,button,text) that is written text */
  
  h1{
    color: purple;
  background-color: rgb(0,200,0);    /*rgb system for light greenish color  */
  background-color: #00dd00;          /*hex system for light greenish color  */
  }
 
 button{
    color: brown;
   background-color: rgb(0,0, 255);    /*   rgb system for blue color           */
    background-color: #0000ff;             /*   rgb system for blue color           */
 }
 /* 2- background color property - Used to set the color of background */
 body{
     background-color: rgb(144, 170, 84); /*  rgb system for red color */
     background-color: rgb(170, 84, 164);          /*  hex system for red color */
     /* background-color: #dddd00; (for yellow) */
 }
 /* color system - RGB which stands for red , green , blue  in which we mix these three colors in different proportions for getting different colors whose names are exactly not given */
 /* syntax of rgb system is rgb(); whose range is 0 to 255 in which 255 is maximum and 0 is minimum  */
 /* another system is HEX system  */
 
 /* COLOR PICKER on google is available for providing RGB value and HEX value of colors  */
 /* HEX color system stands for hexadecimal  */
 /* syntax is #ff0000;  */
 /* in hexadecimal we have digits from 0 to 15 in which 15 is max and 0 is minimum and after 9 , i.e.10,11,12,13,14,15 are denoted as a,b,c,d,e,f respectively  */
 
 /* for color combination go to google and search COLOR PALATTE and choose the site namely COOLORS and CANVA which provides us the good color combination */
 
 /* selectors:
 1) UNIVERSAL selector *{} which is applied to whole document */
 /* *{
    color: yellow;
 } */
 
 /* 2) Element selector : This is used to make changes in the selector that is taken like if we take the h1 element then changes will be done in all the h1 elements */
 
    /* 3) Third selector is id selector in which we apply changes by creating id  */
 /* id selector start with #  */
 #first_id{
    color: greenyellow;
 }
 /* 4) Class selector =  for giving same id to more than one element then we give class to them   */
  /* class is written with (.) fullstop  */
  /* we use class when we have to give same property to different elements */
  /* selectors also work with commas  */
 .myclass{
    color: rgb(37, 15, 235);
 }
 #ps{
    text-align: center;
    color: yellow;
 
 }
 /* practice set 1 question 1  */
 #box{
    background-color: blue;
    color: white;
 }
 /* practice set 1 question 2 */
 .heading{
    color: rgb(227, 222, 223);
 }
 /* practice set 1 question 3 */
 #color{
    background-color: green;
 }
 /* text properties */
 /* 1) text align = it decide what is the position of text that is written on screen  */
 /* there are five properties in text align = left / right / center /start / end */
 /* example of left text align  */
 #left{
    text-align: left;
    color: yellow;
 }
 /* example of center text align */
 #center{
    text-align:center;
    color: white;
 }
 /* example of right text align */
 #right{
    text-align: right;
    color: blue;
 }
 
 /* working of end is equal to right and working of start is same as left  */
 
 /* 2) text decoration = it is used to decorate the written text */
 /* there are three types of text decoration = underline / overline / line-through */
 
 /* example of underline text decoration in which a line is draw below the text */
 
 #underline{
    text-decoration: blue wavy underline;
    color: white;
 }
 
 /* example of overline text decoration in which a line is draw above the text  */
 
 #overline{
     text-decoration:black double overline ;
     color: yellow;
 }
 
 /* example of line through text decoration in which a line is draw in middle of the text */
 
 #linethrough{
    text-decoration: white dotted line-through;
    color: aqua;
 }
 
 /* text decoration is basically used in anchor tag because when we create an anchor tag then by default an underline is formed and to avoid this underline we set the value of text decoration to none  */
 
 a{
    text-decoration: none;
    color: yellow;
 }
 
 /* 3) font weight = It tells us how much our font is light or dark */
 /* font weight = normal/bold/bolder/lighter  */
 /* font weight ranges lies between 100 to 900  */
 
 #bold{
    font-weight: bold;
 }
 #lighter{
    font-weight: lighter;
 }
 #bolder{
    font-weight: bolder;
 }
 #normal{
    font-weight: normal;
 }
 
 /* 4)font family = It is used to express the font style of our text  */
 /* there are two types of font family = generic and specific */
 /* generic font family has five families = serif , sans serif , cursive , fantasy , monospace  */
 
 #font{
    font-family: cursive;
 }
 
 /* units in css means the measurements */
 /* there are two types of units in css = first is absolute unit and the second is relative unit  */
 /* we can measure absolute units in many units but the most important unit is PIXEL  */
 /* 96px = 1 inch  */
 
 #fontsize{
    font-size: 50px;
 }
 /* size of normal paragraph is 16 px  */
 
 /* 4) line height = It tells us the about the distance of height between two  lines if in a text more than 1 line we set line height as 10 px then both lines will overlap each other but if we set it as 50px then the distance between two lines will be more*/
 /* line height is the height that a line take  */
 
 #lineheight{
    line-height: 20px;
 }
 
 /* 5) text trasnform = This property is used to change the case of the text that is uppercase/lowercase/capitalise/none  */
 
 #uppercase{
    text-transform: uppercase;
 }
 #lowercase{
    text-transform: lowercase;
 }
 /* in capitalise the first letter of each word will be capitalise */
 #capitalise{
    text-transform: capitalize;
 }
 
 #practice{
    text-align: center;
    color: red;
    font-weight:bolder ;
 }
 
 /* practice set 2 question 1  */
 
 #nothing{
    text-align: center;
    text-transform: capitalize;
 }
 
 /* practice set 2 question 2  */
 
 *{
    font-family:'Times New Roman';
 }
 
 /* practice set 2 question 3 */
 
 #outer{
    font-size: 25px;
 }
 #inner{
    font-size: 10px;
 }
 
  #box{
    text-align: center;
    font-size: 30px;
    font-family: cursive;
    text-decoration: black wavy underline;
  }
 
  /* box model in css = we have to learn about 1) height of the content 2) width of the content 3) border that enclosed the content 4) padding that is extra space between border and content 5) margin that is the space between two content box  */
 
  #css{
    height: 100px;
    background-color: whitesmoke;
    width: 200px;
    text-align: center;
 /* border property has 1) border width 2) border style - may be solid , dotted , dashed 3) border color   */
    border-width: 5px;
    border-style: double;
    border-color: black;
    /* border radius is used to round the corners of an element outer border edge  */
    border-radius: 10px;
    /* padding-left: 100px;
    padding-right: 100px;
    padding-top: 100px;
    padding-bottom: 100px; */
    padding: 50px;
 }
 
 /* border shorthand : 2px solid black; (this is the shortcut to write all properties of border) */
 
 /* if of a square border radius is set to 50 % then square become circle  */
 
 #button{
    color: blue;
    height: 100px;
    background-color: whitesmoke;
    width: 100px;
    /* border-width: 5px;
    border-style: solid;
    border-color: green; */
    border: 5px solid green;
    text-align: center;
    border-radius: 50%;
     padding-left: 50px;  /*  (padding left create the space from left )       (padding examples) */
    padding-right: 50px;    /*   (padding right create the space from right ) */
     padding-top: 50px;          /*(padding top create the space from top ) */
    padding-bottom: 50px;       /* (padding bottom create the space from bottom)*/
 }
 
 /* padding is the space between content and border 
 padding may be added from different sides
 like padding-left(for space from left)/padding-right(for space from right)/padding-top(for space from top)/padding-bottom(for space between bottom) */
 /* 
 padding shorthand = 
 padding : 50px (which means that the padding will apply from all four sides)
 padding : 1px 2px 3px 4 px (in this method sequence is top , right , bottom , left [clockwise]) */
 
 /* example of margin  */
 /* margin is the space between two elements or blocks */
 /* margin is similar to padding it is from top bottom left right  */
 /* shorthand is also same as that of padding  */
 
 #margin{
    height: 100px;
   width: 110px;
    background-color: yellow;
    color: aqua;
    border: 5px double rgb(62, 13, 239);
    text-align: center;
    padding: 5px 8px 10px 15px;
    margin: 50px;
    border-radius: 30px;
 }
 
 #psthree{
    font-size: 40px;
    text-align: center;
    color: rgb(146, 227, 14);
    background-color: white;
 }
 
 #setthree{
    height: 100px;
    width: 100px;
    background-color: green;
    border-radius: 50%;
 }
 
 #other{
    text-align: center;
    font-size: larger;
    font-family:  cursive;
    background-color: grey;
 }
 
 #one{
    height: 400px;
    width: 150px;
    background-color: white;
    margin: 20px;
    border: 5px double yellow;
 }
 
 #two{
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: red;
    margin: 20px;
    border: 5px double grey;
    
 }
 
 #three{
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: green;
    margin: 20px;
    border: 5px double grey;
 }
 
 #four{
    height: 100px;
    width: 100px;
    border-radius: 50%;
    background-color: yellow;
    margin: 20px;
    border: 5px double grey;
 }
 
 #navbar{
    text-align: center;
    font-size: larger;
    background-color: pink;
 }
 
 /* mostly all developers before starting css set the padding and margin of whole documents 0 with the help of universal selector  */
 
 #ncr{
    height: 60px;
    background-color: #0f1111;
  
 }
 
 a{
    color: white;
    margin-right: 200px;
  text-decoration: none;
 }
 
 #logo{
    color: #f08804;
    font-size: 25px;
 }
 
 /* input{
    background-color: yellow;
 } */
 
 button{
    background-color: #f08804;
   
 }
 
 /* margin create space between border of two things
 padding create space between content and border  */
 
 /* DISPLAY PROPERTY */
 /* (inline / block / inline-block / none ) */
 /* INLINE ELEMENTS acquire only required space width
 block ELEMENTS acquire full space width */
 
 /* if an inline elements display property is set to block then it will take the space of whole width 
 if a block elements display property is set to inline then it will take the space according to the inline element */
 
 /* div{
    background-color: red;
    display:inline;
 }
 
 button{
    background-color: greenyellow;
    display: block;
 } */
 
 #boxone{
    height: 100px;
    width: 100px;
    display: inline;
    padding: 50px;
    margin: 50px;
 }
 #boxtwo{
    height: 100px;
    width: 100px;
    display: inline;
    padding: 50px;
    margin: 50px;
         
 }
 
 #boxthree{
    height: 100px;
    width: 100px;
    display: inline-block;
    padding: 50px;
    margin: 50px;
         
 }
 
 /* in inline display property margin is applied not from top and bottom  */
 
 /* to overcome this problem we use another display property known as INLINE BLOCK property through which we can apply padding and margin from all the direction  */
 /* there is one another property known as display none property which literally remove the content from the document  */
 /* there is one another thing similar to display none property that one is visibility set to hidden (visibillity : hidden ) */
 /* when visibility is set to none, space for the element is reserved but for display set to none , no space is reserved or blocked for the element  */
 /* that means in case of visibility hidden space is there remain for the element but if display is set to none then the element's space is completely removed  */
 
 /* Alpha channel = It decide the opacity of the color (RGBA) where A stands for Alpha  */
 /* Alpha range is (0 to 1 ) in which if we set the opacity to 0 then the color is not seen and if we set the opacity to 1 then the color seen completely*/
 
 
 
 #new{
    height: 60px;
 }
 #main{
    font-size: 26px;
    color: #f08804;
 }
 
 #abhay{
    background-color: greenyellow;
    height: 100px;
    width: 100px;
    border-radius: 50%;
    text-align: center;
    padding: 50px; 
 }
 
 #aman{
    background-color: aqua;
    height: 100px;
    width: 100px;
    border-radius: 50%;
 }
 
 #psfour{
    height: 70px;
    text-align: center;
    font-size: 50px;
    color: rgba(255,0,0,0.65);
    font-family: cursive;
    background-color: rgba(0,255,0,0.50);
 }
 
 /* practice set 4  */
 
 .contentbox{
    height: 100px;
    width: 100px;
    border: 2px solid yellow;
   display: inline-block;             /*  (this inline block property makes the box in one line) */
    
 }
 
 #content{
  height:600px;                    /* this is used to make a space available for body of the documents */
 }
   
 footer{
    background-color: #0f1111;
    color: white;
    text-align: center;
 }
 
 /* Absolute units are those units whose value remain same everywhere like (px , inch , cm , m)*/
 /* while */
 /* Relative units are those units whose values are not same everywhere  like(% , em , rem ) */
  
 
 /* RELATIVE UNITS IN CSS  */
 
 /*1) percentage (%) = This is used to define size in relation as parent and child 
 like if i gave child element as 33% then this element become 33% of parent element which is 100% */
 
 #parent{
    height: 200px;
    width: 200px;
    background-color: yellow;
    margin: 20px;
 
 }
 
 #child{
    height: 50%;
    width: 50%;
    background-color: red;
    margin-left: 25%;
    border: 2px solid black;
    }
 
 /*2) there is another relative unit in css that is em  */
 /* if we make a div and again a div inside that div and make the height of first div to 100px and height of second div to 1 em than this means that the height of second div is also 100px */
 /* in this type of absolute unit everything is change from point of size of text(font size )  */
 
 #emone{
    height: 200px;
    width: 200px;
    background-color: aqua;
    font-size: 30px;
 }
 
 #emtwo{
    height: 50%;
    width: 50%;
    background-color: green;
    font-size: 2em;                           /*  (due to this the font size of child element that is emtwo becomes two times of the 
    font size of parent element that is emone) */
   /* in the case of other properties like width size will be consider from point of view of element itself  */
   width: 5em;          /* (this will make the width equal to 100px because size of font in emone is 30px so size of font size of emtwo becomes 60px and width of emtwo becomes 60*5 = 300px) */
 }
 
 /* NOTE = relative unit (em) is somewhere work from pov of parent element some of them work from pov of itself element  */
 
 
 /* 3)rem unit(root Em)=(font size of root element) this unit is used in comparison to root element (that the element which is most outer element ) like html tag or body tag */
 
 /* 4) vh = relative to 1% of viewport height
 5)vw = relative to 1% of viewport width  */
 
 /* POSITION PROPERTY = The position of CSS property sets how an element is positioned in a document  */
              /* there are four possible value for position property 
 
              these are = static / relative / absolute / fixed */
 
 #position{
    background-color: blueviolet;
    font-size: 50px;
    text-align: center;
 }          
 
 #pgtwo{
    height: 100px;
    width: 100px;
    background-color: aqua;
    border: 2px solid black;
    display: inline-block;
    position: static;                 /* (this will create no change because by default position of every element in our css is static)
    
    (the top[used for setting distance from top of the document] , bottom [used for setting distance from bottom of the document], left [used fpr setting distance from left of the document], right [used for setting distance from right of the document ] , and z-index properties have no effect )*/
 }
 
    /* NOTE = the all top , bottom , left , right properties are not working with static property  */
 
 
 #pgthree{
    height: 100px;
    width: 100px;
    background-color: aqua;
    border: 2px solid black;
    display: inline-block;
 position: relative;      /*  (this property brings changes in compare to itself and all the three properties are applied in this property ) */
 top: 20px;                   /* (this will move the box to 20px from top from pov of itself that is its previous top point is shifted to 20 px below ) */
 } 
 
 #pgfour{
    height: 100px;
    width: 100px;
    background-color: aqua;
    border: 2px solid black;
    display: inline-block;
  position: absolute;           /*(positioned relative to its closest non-static(positioned) ancestor) */
 }
 
 #pgfive{
    height: 100px;
    width: 100px;
    background-color: aqua;
    border: 2px solid black;
    display: inline-block;
 }